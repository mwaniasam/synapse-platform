generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                Int  @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token     String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id           Int   @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  passwordHash  String?   @map("password_hash")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  learningStyle String?   @default("reading-writing")
  accounts      Account[]
  sessions      Session[]
  focusSessions FocusSession[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}

model FocusSession {
  id          Int    @id @default(autoincrement())
  userId      Int
  content     Json
  sessionData     Json
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  duration    Int
  topic       String
  performance String
  createdAt   DateTime  @default(now())
}
